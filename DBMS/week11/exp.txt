11.1:

CREATE OR REPLACE PROCEDURE Cal_Int(
    p_principal IN NUMBER,
    p_rate IN NUMBER,
    p_years IN NUMBER,
    p_interest OUT NUMBER
) AS
BEGIN
    -- Calculate simple interest
    p_interest := (p_principal * p_rate * p_years) / 100;
END Cal_Int;
/

DECLARE
    principal NUMBER := &principal; 
    interest NUMBER := &interest;     
    years NUMBER := &years;        
    cal_int NUMBER;

BEGIN
    Cal_Int(principal, interest,years, cal_interest);
    DBMS_OUTPUT.PUT_LINE('Simple Interest: ' || cal_interest);
END;
/



11.2:

CREATE OR REPLACE PROCEDURE display_proj
(dept_name IN dept.dno%type)
AS
    v_dept_id VARCHAR2(3); -- Match the data type of dno
BEGIN
    -- Find the department ID based on the given department name
    SELECT dno
    INTO v_dept_id
    FROM dept
    WHERE dname = dept_name;

    -- Cursor to fetch project and employee information
    FOR project_rec IN (
        SELECT p.prj_name, e.ename
        FROM proj p
        JOIN emp e ON p.prj_no = e.prj_id
        WHERE p.dno = v_dept_id
    ) LOOP
        DBMS_OUTPUT.PUT_LINE('Project: ' || project_rec.prj_name);
        DBMS_OUTPUT.PUT_LINE('Employee: ' || project_rec.ename);
    END LOOP;

    EXCEPTION
        WHEN NO_DATA_FOUND THEN
            DBMS_OUTPUT.PUT_LINE('Department not found: ' || dept_name);
END display_proj;
/


execute display_proj('HR');


11.3:

func1:
CREATE OR REPLACE FUNCTION Cal_Age(date_of_birth IN DATE) RETURN NUMBER IS
    v_age NUMBER;
BEGIN
    v_age := FLOOR(MONTHS_BETWEEN(SYSDATE, date_of_birth) / 12);
    RETURN v_age;
END Cal_age;
/


func2:
CREATE OR REPLACE FUNCTION Cal_Exp(join_date IN DATE) RETURN NUMBER IS
    v_exp NUMBER;
BEGIN
    v_exp := FLOOR(MONTHS_BETWEEN(SYSDATE, join_date) / 12);
    RETURN v_exp;
END Cal_Exp;
/



DECLARE
	e_no emp.empno%type;
	name emp.ename%type;
	dob emp.date_birth%type;
	join_d emp.date_join%type;
    v_age number(10,2);
	v_exp number(10,2);

begin
	e_no := &Employee_Number;
	select ename,date_birth,date_join into name,dob,join_d from emp where empno = e_no;
	v_age := Cal_Age(dob);
	v_exp := Cal_Exp(join_d);
	dbms_output.put_line('Ename' || '---' || 'AGE' || '---' || 'Service');
	dbms_output.put_line( name || '---' || v_age || '---' || v_exp);
END;
/




11.4:

CREATE OR REPLACE FUNCTION Cal_proj(department_id IN dept.dno%TYPE) RETURN NUMBER IS
    v_total_fund NUMBER := 0;
BEGIN
    SELECT SUM(p.prj_fund)
    INTO v_total_fund
    FROM proj p
    WHERE p.dno = department_id;

    RETURN v_total_fund;
END Cal_proj;
/


DECLARE
    v_deptno dept.dno%TYPE;
    v_total_fund NUMBER;
    CURSOR dept_cursor IS
        SELECT dno, dname FROM dept;
BEGIN
    FOR dept_rec IN dept_cursor LOOP
        v_deptno := dept_rec.dno;
        v_total_fund := Cal_Proj(v_deptno);
        DBMS_OUTPUT.PUT_LINE(dept_rec.dname || ' department has received Rs. ' || v_total_fund || '/-');
    END LOOP;
END;
/
